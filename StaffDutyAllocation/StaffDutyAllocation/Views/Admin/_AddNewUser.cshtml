@model Common.ViewModels.UserVM

@Scripts.Render("~/bundles/jqueryval")

<div class="">
    @using (Ajax.BeginForm("Register", "Admin", null, new AjaxOptions { HttpMethod = "Post",UpdateTargetId="renderpage" ,OnSuccess = "OnSuccess", OnFailure = "OnSuccess" }, new { @id = "regForm" }))
        {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal px-3">
        <h2 class="text-center mb-2">Add New User</h2>
        <div class="row mb-2 justify-content-evenly">
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >

                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row mb-2 justify-content-evenly">
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row mb-2 justify-content-evenly">
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.LoginId, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.LoginId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.LoginPass, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.LoginPass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoginPass, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-2 justify-content-evenly">
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control date", @type = "date", @max="2003-12-31"  } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger " })
                </div>
            </div>
            <div class="form-group col-sm-5">
                @Html.LabelFor(model => model.BasicSalary, htmlAttributes: new { @class = "control-label col-md-10" })
                <div >
                    @Html.EditorFor(model => model.BasicSalary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BasicSalary, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group d-flex ms-4">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
            <div class="form-check ">
                @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-check-input", @type = "radio" } })
                <label class="form-check-label" for="Gender">
                    Male
                </label>
            </div>
            <div class="form-check ">
                @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-check-input", @type = "radio" } })
                <label class="form-check-label" for="Gender">
                    Female
                </label>
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })


        <div class="  form-group my-3 row align-items-center justify-content-evenly">
            <button type="submit" class="btn btn-success col-sm-3">Save</button>
            <button type="button" class="btn btn-secondary col-sm-3" data-bs-dismiss="modal">Close</button>
        </div>
    </div>
        }


</div>

