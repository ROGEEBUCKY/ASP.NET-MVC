@model Common.ViewModels.UserVM
@{
    Layout = null;
    ViewBag.Title = "Login";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Scripts.Render("~/bundles/modernizr")


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar  navbar-light shadow-lg bg-dark p-3">
        <div class="container">
            @Html.ActionLink("Online Medicine", "Index", "Home", null, new { @class = "navbar-brand text-light" })
        </div>
    </nav>
    <section id="loginSection" class="message p-5">
        <div class="row container-fluid justify-content-center align-items-center">
            <div class="card shadow-lg col-md-8 p-3">
                <h2 class="text-center">Register</h2>
                @using (Html.BeginForm("Register", "Login", FormMethod.Post, new { @class = "card-body", @id = "LogForm" }))
                    {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <fieldset class="col-md-6">
                            <legend>Personal Information</legend>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <fieldset class="col-md-6">
                            <legend>Address Details</legend>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>

                        <div class="d-flex align-items-center justify-content-center my-4">
                            <input type="submit" value="Register" class="btn btn-dark mx-3" />
                            @Html.ActionLink("Already Registered? Login", "Index", "Login", null, new { @class = "btn btn-outline-dark" })

                        </div>
                    </div>
                    }
            </div>
        </div>
    </section>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-toast-plugin/1.3.2/jquery.toast.css" />
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $(document).ready(function () {
            var message = "@ViewBag.message";
            if(message != ''){
                swal.fire({
                    title: "Registered Successfully!!",
                    text: "please Login to continue",
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 2000
                }).then(function () {
                    window.location = "/Login";
                });
        }
        $("#regbtn").click(function () {
            if ($("#regForm").valid() == false) {
                $.toast({
                    heading: 'Error',
                    text: 'Invaid Inputs',
                    showHideTransition: 'slide',
                    icon: 'error',
                    position: 'top-center',
                })
            }
        });
    });
    </script>
</body>
</html>
